{:use-macros nil, :excludes #{}, :name rpi-wall.gmail.client, :imports nil, :requires {reagent.core reagent.core}, :uses {atom reagent.core, render reagent.core}, :defs {new-emails-state {:name rpi-wall.gmail.client/new-emails-state, :file "/home/rilla/code/clojure/clojurescript/rpi_wall/src/rpi_wall/gmail/client.cljs", :line 4, :column 1, :end-line 4, :end-column 22, :meta {:file "/home/rilla/code/clojure/clojurescript/rpi_wall/src/rpi_wall/gmail/client.cljs", :line 4, :column 6, :end-line 4, :end-column 22}}, gmail {:protocol-inline nil, :meta {:file "/home/rilla/code/clojure/clojurescript/rpi_wall/src/rpi_wall/gmail/client.cljs", :line 6, :column 7, :end-line 6, :end-column 12, :arglists (quote ([]))}, :name rpi-wall.gmail.client/gmail, :variadic false, :file "/home/rilla/code/clojure/clojurescript/rpi_wall/src/rpi_wall/gmail/client.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:else :div.gmail}, :order [:else :div.gmail]}, :doc nil}