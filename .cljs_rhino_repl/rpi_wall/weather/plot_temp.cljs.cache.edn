{:use-macros nil, :excludes #{}, :name rpi-wall.weather.plot-temp, :imports nil, :requires {s clojure.string, clojure.string clojure.string}, :uses nil, :defs {margin {:name rpi-wall.weather.plot-temp/margin, :file "/home/rilla/code/clojure/clojurescript/rpi_wall/src/rpi_wall/weather/plot_temp.cljs", :line 4, :column 1, :end-line 4, :end-column 12, :meta {:file "/home/rilla/code/clojure/clojurescript/rpi_wall/src/rpi_wall/weather/plot_temp.cljs", :line 4, :column 6, :end-line 4, :end-column 12}}, height {:name rpi-wall.weather.plot-temp/height, :file "/home/rilla/code/clojure/clojurescript/rpi_wall/src/rpi_wall/weather/plot_temp.cljs", :line 5, :column 1, :end-line 5, :end-column 12, :meta {:file "/home/rilla/code/clojure/clojurescript/rpi_wall/src/rpi_wall/weather/plot_temp.cljs", :line 5, :column 6, :end-line 5, :end-column 12}}, width {:name rpi-wall.weather.plot-temp/width, :file "/home/rilla/code/clojure/clojurescript/rpi_wall/src/rpi_wall/weather/plot_temp.cljs", :line 6, :column 1, :end-line 6, :end-column 11, :meta {:file "/home/rilla/code/clojure/clojurescript/rpi_wall/src/rpi_wall/weather/plot_temp.cljs", :line 6, :column 6, :end-line 6, :end-column 11}}, clean-nums {:protocol-inline nil, :meta {:file "/home/rilla/code/clojure/clojurescript/rpi_wall/src/rpi_wall/weather/plot_temp.cljs", :line 8, :column 7, :end-line 8, :end-column 17, :arglists (quote ([x]))}, :name rpi-wall.weather.plot-temp/clean-nums, :variadic false, :file "/home/rilla/code/clojure/clojurescript/rpi_wall/src/rpi_wall/weather/plot_temp.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, val-scaler {:protocol-inline nil, :meta {:file "/home/rilla/code/clojure/clojurescript/rpi_wall/src/rpi_wall/weather/plot_temp.cljs", :line 12, :column 7, :end-line 12, :end-column 17, :arglists (quote ([xs]))}, :name rpi-wall.weather.plot-temp/val-scaler, :variadic false, :file "/home/rilla/code/clojure/clojurescript/rpi_wall/src/rpi_wall/weather/plot_temp.cljs", :end-column 17, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xs]))}, temp-lineplot {:protocol-inline nil, :meta {:file "/home/rilla/code/clojure/clojurescript/rpi_wall/src/rpi_wall/weather/plot_temp.cljs", :line 20, :column 7, :end-line 20, :end-column 20, :arglists (quote ([data]))}, :name rpi-wall.weather.plot-temp/temp-lineplot, :variadic false, :file "/home/rilla/code/clojure/clojurescript/rpi_wall/src/rpi_wall/weather/plot_temp.cljs", :end-column 20, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:stroke :temp :fill :points :stroke-width :svg :viewBox :polyline}, :order [:temp :svg :viewBox :polyline :fill :stroke :stroke-width :points]}, :doc nil}